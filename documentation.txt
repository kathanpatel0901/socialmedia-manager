My project aims to create a social media manager for academic evolution at My university. my plan to leverage the Twitter API for authentication and tweet management. This involves allowing users to authenticate their accounts through Twitter and enabling the management of tweets related to academic resources, updates, events, and community engagement.

sudo nano /etc/nginx/sites-available/example.com


sudo certbot --nginx -d socialmediamanager.in.net

http://unix:/run/gunicorn.sock

https://socialmediamanager.in.net


git token:	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

linkedin access token:

AQXGQ2DnanFDgGSOhk3RSeAwHWX9yVuIwfbbmc_o12yU5redsqwBsxoD4H-fJlepcA4-N7_n9XxDqgK0pQnwFuKH3kpeEn92IaVXh3fKv9xrL7YGweTFQI_zGI-rTDzgS8g_A-gQPJs4iXzRwW9g0spxAYhLjWnRHAavHmd9NgdRqx2XQkv20EUTrxcOFQD1JZv0mcZ6UmIdtV2HXINWQsd3DBTcMBYZH4X85SJffs2uOTc1bqyoTYGkhEmnwMH130j1h7PQI7rG4_osADz2l_cbNi4lLcy2wSRhmeX6HMlYT3cyTQsxDLd_YFvLCrxGy12Yr40_pOQJRppBGOYFFP1Xac7h4Q

pip install django-bootstrap-v5

from django.shortcuts import render, redirect
from .forms import PostForm
import tweepy

def post(request):
    form = PostForm()
    twitter_auth_keys = {
        "consumer_key": "ULYeOm844iifGFuE32YyLnzT0",
        "consumer_secret": "xQ9YJjXLDmIjf67e6ZGrxxrhZxg4pyFlnV6qbLYEMEfrbavxDb",
        "access_token": "1758379615968514048-7fCJHGXHwU52KMAS2p1HMOQCjlIymx",
        "access_token_secret": "95eCaWA79LD48G8PgT2pzFAb6CGIqURA9hXm6y1OrUmvJ",
    }

    if request.method == "POST":
        form = PostForm(request.POST, request.FILES)  # Bind the form with POST data

        if form.is_valid():
            social_media = form.cleaned_data["social_media"]  # Get selected social media

            if social_media == "Twitter":
                content = form.cleaned_data["post_text"]  # Retrieve post_text from form

                # Post the tweet
                client = tweepy.Client(
                    consumer_key=twitter_auth_keys["consumer_key"],
                    consumer_secret=twitter_auth_keys["consumer_secret"],
                    access_token=twitter_auth_keys["access_token"],
                    access_token_secret=twitter_auth_keys["access_token_secret"],
                )
                client.create_tweet(text=content)

                return redirect("post_success")  # Redirect to post success page
            else:
                # If social media is not Twitter, display an error message
                error_message = "Posting to selected social media is not supported yet."
                return render(request, "dashboard/post.html", {"form": form, "error_message": error_message})

    return render(request, "dashboard/post.html", {"form": form})
